{"task_id": "HumanEval/30", "completion": "", "ori_pred": "\ndef getNegative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> getNegative([-1, 2, -4, 5, 6])\n    [-1, -4]\n    >>> getNegative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -10]\n    \"\"\"\n\ndef getEven(l: list):\n    \"\"\"Return only even numbers in the list.\n    >>> getEven([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [2, 4, 6, 8, 10]\n    >>> getEven([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    []\n    \"\"\"\n\ndef getOdd(l: list):\n    \"\"\"Return only odd numbers in the list.\n    >>> getOdd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 3, 5, 7, 9]\n    >>> getOdd([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, -3, 9, 1, -10]\n    \"\"\"\n\ndef getPrime(l: list):\n    \"\"\"Return only prime numbers in the list.\n    >>> getPrime([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [2, 3, 5, 7, 11]\n    >>> getPrime([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [3, 5, 11, 123]\n    \"\"\"\n\ndef getDivisibleBy(l: list, divisor: int):\n    \"\"\"Return only numbers divisible by divisor in the list.\n    >>> getDivisibleBy([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2)\n    [2, 4, 6, 8, 10]\n    >>> getDivisibleBy([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10], 3)\n    [3, 9, 123, 3]\n    \"\"\"\n\ndef getDivisibleBy2(l: list):\n    \"\"\"Return only numbers divisible by 2 in the list.\n    >>> getDivisibleBy2([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [2, 4, 6, 8, 10]\n    >>> getDivisibleBy2([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n    \"\"\"\n\ndef getDivisibleBy3(l: list):\n    \"\"\"Return only numbers divisible by 3 in the list.\n    >>> getDivisibleBy3([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [3, 6, 9]\n    >>> getDivisibleBy3([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]\n    \"\"\"\n\ndef getDivisibleBy5(l: list):\n    \"\"\"Return only numbers divisible by 5 in the list.\n    >>> getDivisibleBy5([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [5, 10]\n    >>> getDivisibleBy5([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]\n    \"\"\"\n\ndef getDivisibleBy7(l: list):\n    \"\"\"Return only numbers divisible by 7 in the list.\n    >>> getDivisibleBy7([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [7]\n    >>> getDivisibleBy7([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]\n    \"\"\"\n\ndef getDivisibleBy11(l: list):\n    \"\"\"Return only numbers divisible by 11 in the list.\n    >>> getDivisibleBy11([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    []\n    >>> getDivisibleBy11([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123]\n    \"\"\"\n\ndef getDivisibleBy13(l: list):\n    \"\"\"Return only numbers divisible by 13 in the list.\n    >>> getDivisibleBy13([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    []\n    >>> getDivisibleBy13([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n    \"\"\"\n\ndef getDivisibleBy17(l: list):\n    \"\"\"Return only numbers divisible by 17 in the list.\n    >>> getDivisibleBy17([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    []\n    >>> getDivisibleBy17([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n    \"\"\"\n\ndef getDivisibleBy19(l: list):\n    \"\"\"Return only numbers divisible by 19 in the list.\n    >>> getDivisibleBy19([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    []\n    >>> getDivisibleBy19([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n    \"\"\"\n\n", "input": "\n\ndef getPositive(l: list):\n    \"\"\"Return only positive numbers in the list.\n    >>> getPositive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> getPositive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n", "mean_logp": null}
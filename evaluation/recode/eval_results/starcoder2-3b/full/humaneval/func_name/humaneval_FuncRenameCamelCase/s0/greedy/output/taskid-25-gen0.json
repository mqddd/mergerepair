{"task_id": "HumanEval/25", "completion": "", "ori_pred": "\ndef factorize_iter(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter(8)\n    [2, 2, 2]\n    >>> factorize_iter(25)\n    [5, 5]\n    >>> factorize_iter(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_2(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_2(8)\n    [2, 2, 2]\n    >>> factorize_iter_2(25)\n    [5, 5]\n    >>> factorize_iter_2(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_3(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_3(8)\n    [2, 2, 2]\n    >>> factorize_iter_3(25)\n    [5, 5]\n    >>> factorize_iter_3(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_4(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_4(8)\n    [2, 2, 2]\n    >>> factorize_iter_4(25)\n    [5, 5]\n    >>> factorize_iter_4(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_5(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_5(8)\n    [2, 2, 2]\n    >>> factorize_iter_5(25)\n    [5, 5]\n    >>> factorize_iter_5(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_6(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_6(8)\n    [2, 2, 2]\n    >>> factorize_iter_6(25)\n    [5, 5]\n    >>> factorize_iter_6(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_7(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_7(8)\n    [2, 2, 2]\n    >>> factorize_iter_7(25)\n    [5, 5]\n    >>> factorize_iter_7(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_8(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_8(8)\n    [2, 2, 2]\n    >>> factorize_iter_8(25)\n    [5, 5]\n    >>> factorize_iter_8(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_9(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_9(8)\n    [2, 2, 2]\n    >>> factorize_iter_9(25)\n    [5, 5]\n    >>> factorize_iter_9(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_10(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_10(8)\n    [2, 2, 2]\n    >>> factorize_iter_10(25)\n    [5, 5]\n    >>> factorize_iter_10(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_11(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_11(8)\n    [2, 2, 2]\n    >>> factorize_iter_11(25)\n    [5, 5]\n    >>> factorize_iter_11(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_12(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_12(8)\n    [2, 2, 2]\n    >>> factorize_iter_12(25)\n    [5, 5]\n    >>> factorize_iter_12(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_13(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_13(8)\n    [2, 2, 2]\n    >>> factorize_iter_13(25)\n    [5, 5]\n    >>> factorize_iter_13(70)\n    [2, 5, 7]\n    \"\"\"\n\ndef factorize_iter_14(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize_iter_14(8)\n    [2, 2, 2]\n    >>> factorize_iter_14(25)\n    [5, 5]\n    >>> factorize_iter_14(70)\n    [2, 5, 7]\n    \"\"\"\n\n", "input": "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n", "mean_logp": null}